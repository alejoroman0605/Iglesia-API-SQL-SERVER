// <auto-generated />
using System;
using Library.Data.DataDBContext;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace Library.Data.Migrations
{
    [DbContext(typeof(DataContext))]
    [Migration("20221108213304_CapacidadRequired")]
    partial class CapacidadRequired
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "2.2.6-servicing-10079")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder, 1L, 1);

            modelBuilder.Entity("Library.Data.Models.Actividad", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("TipoActividadID")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("TipoActividadID");

                    b.ToTable("Actividades");
                });

            modelBuilder.Entity("Library.Data.Models.GradoEscolar", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("GradoEscolar");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Nombre = "Pre-esolar"
                        },
                        new
                        {
                            Id = 2,
                            Nombre = "Primero"
                        },
                        new
                        {
                            Id = 3,
                            Nombre = "Segundo"
                        },
                        new
                        {
                            Id = 4,
                            Nombre = "Tercero"
                        },
                        new
                        {
                            Id = 5,
                            Nombre = "Cuarto"
                        },
                        new
                        {
                            Id = 6,
                            Nombre = "Quinto"
                        },
                        new
                        {
                            Id = 7,
                            Nombre = "Sexto"
                        },
                        new
                        {
                            Id = 8,
                            Nombre = "Séptimo"
                        },
                        new
                        {
                            Id = 9,
                            Nombre = "Octavo"
                        },
                        new
                        {
                            Id = 10,
                            Nombre = "Noveno"
                        });
                });

            modelBuilder.Entity("Library.Data.Models.Horario", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("Fin")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Inicio")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Horarios");
                });

            modelBuilder.Entity("Library.Data.Models.Iglesia", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<int>("MunicipioID")
                        .HasColumnType("int");

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("Id");

                    b.HasIndex("Id")
                        .IsUnique();

                    b.HasIndex("MunicipioID");

                    b.HasIndex("Nombre")
                        .IsUnique();

                    b.ToTable("Iglesias");
                });

            modelBuilder.Entity("Library.Data.Models.Matricula", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<DateTime>("Fecha")
                        .HasColumnType("datetime2");

                    b.Property<int>("HorarioID")
                        .HasColumnType("int");

                    b.Property<bool>("IsMatriculado")
                        .HasColumnType("bit");

                    b.Property<int>("NinoID")
                        .HasColumnType("int");

                    b.Property<int>("ProyectoID")
                        .HasColumnType("int");

                    b.Property<int>("ResponsableID")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("HorarioID");

                    b.HasIndex("Id")
                        .IsUnique();

                    b.HasIndex("ProyectoID");

                    b.HasIndex("ResponsableID");

                    b.HasIndex("NinoID", "ProyectoID")
                        .IsUnique();

                    b.ToTable("Matriculas");
                });

            modelBuilder.Entity("Library.Data.Models.Municipio", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("ProvinciaID")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("ProvinciaID");

                    b.ToTable("Municipios");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Nombre = "Matanzas",
                            ProvinciaID = 6
                        },
                        new
                        {
                            Id = 2,
                            Nombre = "Cárdenas",
                            ProvinciaID = 6
                        },
                        new
                        {
                            Id = 3,
                            Nombre = "Martí",
                            ProvinciaID = 6
                        },
                        new
                        {
                            Id = 4,
                            Nombre = "Colón",
                            ProvinciaID = 6
                        },
                        new
                        {
                            Id = 5,
                            Nombre = "Perico",
                            ProvinciaID = 6
                        },
                        new
                        {
                            Id = 6,
                            Nombre = "Jovellanos",
                            ProvinciaID = 6
                        },
                        new
                        {
                            Id = 7,
                            Nombre = "Pedro Betancourt",
                            ProvinciaID = 6
                        },
                        new
                        {
                            Id = 8,
                            Nombre = "Limonar",
                            ProvinciaID = 6
                        },
                        new
                        {
                            Id = 9,
                            Nombre = "Unión de Reyes",
                            ProvinciaID = 6
                        },
                        new
                        {
                            Id = 10,
                            Nombre = "Ciénaga de Zapata",
                            ProvinciaID = 6
                        },
                        new
                        {
                            Id = 11,
                            Nombre = "Jagüey Grande",
                            ProvinciaID = 6
                        },
                        new
                        {
                            Id = 12,
                            Nombre = "Calimet",
                            ProvinciaID = 6
                        },
                        new
                        {
                            Id = 13,
                            Nombre = "Los Arabos",
                            ProvinciaID = 6
                        });
                });

            modelBuilder.Entity("Library.Data.Models.Participacion", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<int>("ActividadID")
                        .HasColumnType("int");

                    b.Property<DateTime>("Fecha")
                        .HasColumnType("datetime2");

                    b.Property<int>("NinoID")
                        .HasColumnType("int");

                    b.Property<string>("Observacion")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("PersonaMayorID")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("ActividadID");

                    b.HasIndex("Id")
                        .IsUnique();

                    b.HasIndex("PersonaMayorID");

                    b.HasIndex("NinoID", "ActividadID")
                        .IsUnique();

                    b.ToTable("Participaciones");
                });

            modelBuilder.Entity("Library.Data.Models.Persona", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("Ap1")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Ap2")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CI")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Celular")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Direccion")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Discriminator")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("FechaNac")
                        .HasColumnType("datetime2");

                    b.Property<int>("GradoEscolarID")
                        .HasColumnType("int");

                    b.Property<int?>("MadreID")
                        .HasColumnType("int");

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("PadreID")
                        .HasColumnType("int");

                    b.Property<int>("Sexo")
                        .HasColumnType("int");

                    b.Property<string>("Telefono")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("CI")
                        .IsUnique();

                    b.HasIndex("GradoEscolarID");

                    b.HasIndex("Id")
                        .IsUnique();

                    b.HasIndex("MadreID");

                    b.HasIndex("PadreID");

                    b.ToTable("Persona");

                    b.HasDiscriminator<string>("Discriminator").HasValue("Persona");
                });

            modelBuilder.Entity("Library.Data.Models.Provincia", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Provincias");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Nombre = "Pinar del Río"
                        },
                        new
                        {
                            Id = 2,
                            Nombre = "Artemisa"
                        },
                        new
                        {
                            Id = 3,
                            Nombre = "La Habana"
                        },
                        new
                        {
                            Id = 4,
                            Nombre = "Mayabeque"
                        },
                        new
                        {
                            Id = 5,
                            Nombre = "La isla de la Juventud"
                        },
                        new
                        {
                            Id = 6,
                            Nombre = "Matanzas"
                        },
                        new
                        {
                            Id = 7,
                            Nombre = "Villa Clara"
                        },
                        new
                        {
                            Id = 8,
                            Nombre = "Cienfuegos"
                        },
                        new
                        {
                            Id = 9,
                            Nombre = "Sancti Spíritus"
                        },
                        new
                        {
                            Id = 10,
                            Nombre = "Ciego de Ávila"
                        },
                        new
                        {
                            Id = 11,
                            Nombre = "Camagüey"
                        },
                        new
                        {
                            Id = 12,
                            Nombre = "Las Tunas"
                        },
                        new
                        {
                            Id = 13,
                            Nombre = "Holguín"
                        },
                        new
                        {
                            Id = 14,
                            Nombre = "Granma"
                        },
                        new
                        {
                            Id = 15,
                            Nombre = "Santiago de Cuba"
                        },
                        new
                        {
                            Id = 16,
                            Nombre = "Guantánamo"
                        });
                });

            modelBuilder.Entity("Library.Data.Models.Proyecto", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<int>("AdministradorID")
                        .HasColumnType("int");

                    b.Property<int>("Capacidad")
                        .HasColumnType("int");

                    b.Property<int>("CoordinadorID")
                        .HasColumnType("int");

                    b.Property<string>("Final")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("IglesiaID")
                        .HasColumnType("int");

                    b.Property<string>("Inicio")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("AdministradorID");

                    b.HasIndex("CoordinadorID");

                    b.HasIndex("Id")
                        .IsUnique();

                    b.HasIndex("IglesiaID");

                    b.ToTable("Proyectos");
                });

            modelBuilder.Entity("Library.Data.Models.TipoActividad", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("Id");

                    b.HasIndex("Id")
                        .IsUnique();

                    b.HasIndex("Nombre")
                        .IsUnique();

                    b.ToTable("TipoActividades");
                });

            modelBuilder.Entity("Library.Data.Models.Nino", b =>
                {
                    b.HasBaseType("Library.Data.Models.Persona");

                    b.Property<double>("Hora")
                        .HasColumnType("float");

                    b.Property<bool>("PIS")
                        .HasColumnType("bit");

                    b.Property<bool>("TienePermisoIrse")
                        .HasColumnType("bit");

                    b.HasDiscriminator().HasValue("Nino");
                });

            modelBuilder.Entity("Library.Data.Models.PersonaMayor", b =>
                {
                    b.HasBaseType("Library.Data.Models.Persona");

                    b.Property<string>("CentroTrabajo")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasDiscriminator().HasValue("PersonaMayor");
                });

            modelBuilder.Entity("Library.Data.Models.Actividad", b =>
                {
                    b.HasOne("Library.Data.Models.TipoActividad", "TipoActividad")
                        .WithMany()
                        .HasForeignKey("TipoActividadID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("TipoActividad");
                });

            modelBuilder.Entity("Library.Data.Models.Iglesia", b =>
                {
                    b.HasOne("Library.Data.Models.Municipio", "Municipio")
                        .WithMany()
                        .HasForeignKey("MunicipioID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Municipio");
                });

            modelBuilder.Entity("Library.Data.Models.Matricula", b =>
                {
                    b.HasOne("Library.Data.Models.Horario", "Horario")
                        .WithMany()
                        .HasForeignKey("HorarioID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Library.Data.Models.Nino", "Nino")
                        .WithMany("Matriculas")
                        .HasForeignKey("NinoID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Library.Data.Models.Proyecto", "Proyecto")
                        .WithMany("Matriculas")
                        .HasForeignKey("ProyectoID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Library.Data.Models.PersonaMayor", "Responsable")
                        .WithMany("Matriculas")
                        .HasForeignKey("ResponsableID")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Horario");

                    b.Navigation("Nino");

                    b.Navigation("Proyecto");

                    b.Navigation("Responsable");
                });

            modelBuilder.Entity("Library.Data.Models.Municipio", b =>
                {
                    b.HasOne("Library.Data.Models.Provincia", "Provincia")
                        .WithMany()
                        .HasForeignKey("ProvinciaID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Provincia");
                });

            modelBuilder.Entity("Library.Data.Models.Participacion", b =>
                {
                    b.HasOne("Library.Data.Models.Actividad", "Actividad")
                        .WithMany("Participaciones")
                        .HasForeignKey("ActividadID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Library.Data.Models.Nino", "Nino")
                        .WithMany("Participaciones")
                        .HasForeignKey("NinoID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Library.Data.Models.PersonaMayor", "PersonaMayor")
                        .WithMany("Participaciones")
                        .HasForeignKey("PersonaMayorID")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Actividad");

                    b.Navigation("Nino");

                    b.Navigation("PersonaMayor");
                });

            modelBuilder.Entity("Library.Data.Models.Persona", b =>
                {
                    b.HasOne("Library.Data.Models.GradoEscolar", "GradoEscolar")
                        .WithMany()
                        .HasForeignKey("GradoEscolarID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Library.Data.Models.Persona", "Madre")
                        .WithMany("HijosDeMadre")
                        .HasForeignKey("MadreID")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.HasOne("Library.Data.Models.Persona", "Padre")
                        .WithMany("HijosDePadre")
                        .HasForeignKey("PadreID")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("GradoEscolar");

                    b.Navigation("Madre");

                    b.Navigation("Padre");
                });

            modelBuilder.Entity("Library.Data.Models.Proyecto", b =>
                {
                    b.HasOne("Library.Data.Models.PersonaMayor", "Administrador")
                        .WithMany("AdminProyectos")
                        .HasForeignKey("AdministradorID")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("Library.Data.Models.PersonaMayor", "Coordinador")
                        .WithMany("CoordinadorProyectos")
                        .HasForeignKey("CoordinadorID")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("Library.Data.Models.Iglesia", "Iglesia")
                        .WithMany()
                        .HasForeignKey("IglesiaID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Administrador");

                    b.Navigation("Coordinador");

                    b.Navigation("Iglesia");
                });

            modelBuilder.Entity("Library.Data.Models.Actividad", b =>
                {
                    b.Navigation("Participaciones");
                });

            modelBuilder.Entity("Library.Data.Models.Persona", b =>
                {
                    b.Navigation("HijosDeMadre");

                    b.Navigation("HijosDePadre");
                });

            modelBuilder.Entity("Library.Data.Models.Proyecto", b =>
                {
                    b.Navigation("Matriculas");
                });

            modelBuilder.Entity("Library.Data.Models.Nino", b =>
                {
                    b.Navigation("Matriculas");

                    b.Navigation("Participaciones");
                });

            modelBuilder.Entity("Library.Data.Models.PersonaMayor", b =>
                {
                    b.Navigation("AdminProyectos");

                    b.Navigation("CoordinadorProyectos");

                    b.Navigation("Matriculas");

                    b.Navigation("Participaciones");
                });
#pragma warning restore 612, 618
        }
    }
}
